name: CI/CD to Docker Hub and Render

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Nuevo: falla rápido si faltan secrets de Docker Hub
      - name: Check required secrets (Docker Hub)
        run: |
          [ -n "${{ secrets.DOCKER_USERNAME }}" ] || { echo "Falta DOCKER_USERNAME"; exit 1; }
          [ -n "${{ secrets.DOCKER_PASSWORD }}" ] || { echo "Falta DOCKER_PASSWORD"; exit 1; }

      # Nuevo: arma el nombre de imagen si no se define IMAGE_NAME
      - name: Prepare image name
        id: prep
        run: |
          IMAGE="${{ secrets.IMAGE_NAME }}"
          if [ -z "$IMAGE" ]; then
            # usuario/nombrerepo (en minúsculas)
            IMAGE="${{ secrets.DOCKER_USERNAME }}/$(echo "${GITHUB_REPOSITORY#*/}" | tr '[:upper:]' '[:lower:]')"
          fi
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.prep.outputs.image }}
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-render:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Nuevo: valida secrets de Render antes de llamar al API
      - name: Check required secrets (Render)
        run: |
          [ -n "${{ secrets.RENDER_API_KEY }}" ] || { echo "Falta RENDER_API_KEY"; exit 1; }
          [ -n "${{ secrets.RENDER_SERVICE_ID }}" ] || { echo "Falta RENDER_SERVICE_ID"; exit 1; }

      - name: Trigger Render Deploy
        run: |
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache":false}' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
